# load start
echo "loading zshrc..."


# -- zsh plugins
# zsh-plugins for mac
if type brew &> /dev/null; then
    FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
fi

source ~/.zplug/init.zsh

zplug "zsh-users/zsh-completions"
FPATH={{ .rust.cargo_completions }}:$FPATH
autoload -Uz compinit
compinit

zplug "zsh-users/zsh-autosuggestions"
bindkey '^[[13;2u' autosuggest-accept


if ! zplug check --verbose; then
   printf "Install?[y/N]: "
   if read -q; then
       echo; zplug install
   fi
fi

zplug load --verbose

# --

# util function
# -- fzf function

ccp() {
    local cpfile

    cpfile=$(find {{ .cp.library }} \( -name "*.cpp" -o -name "*.go" -o -name "*.hs" -o -name "*.bc" \) -not -path '{{ .cp.library }}/test/*' -type f -print 2> /dev/null | fzf)
    if type "oj-bundle" > /dev/null 2>&1; then
        oj-bundle $cpfile | xsel -b
        echo "Copied $cpfile (by oj-bundle)"
    else
        cat $cpfile | xsel -b
        echo "Copied $cpfile (by cat)"
    fi

}

# -- other function
fcp() {
    cat $1 | xsel -b
}


# ulimit
ulimit -Hs 131072
ulimit -s 131072


# command history
export HISTFILE=${HOME}/.zsh_history
export HISTSIZE=1000
export SAVEHIST=10000
setopt hist_ignore_dups
setopt EXTENDED_HISTORY

# starship
if type "starship" > /dev/null 2>&1; then
    eval "$(starship init zsh)"
else
    echo "Not Found: Starship is not installed."
fi

if type "zoxide" > /dev/null 2>&1; then
    eval "$(zoxide init zsh)"
else
    echo "Not Found: zoxide is not installed."
fi

# alias
if type "tree" > /dev/null 2>&1; then
    alias tree="tree -I .git -I node_modules -L 3"
fi

if type "exa" > /dev/null 2>&1; then
    alias ls="exa --git"
fi

if type "delta" > /dev/null 2>&1; then
    alias diff="delta"
fi

if type "lazygit" > /dev/null 2>&1; then
    alias lg="lazygit"
fi

alias ga="git add"
alias gc="git cz"
alias gp="git push"

alias vim="noglob nvim"
alias vp='nvim -c ":e #<1"'

alias vag="vagrant"

alias ce="chezmoi edit"

# VBox(for vagrant)

if [ $USER = 'vagrant' ]; then
    VBoxClient --clipboard
fi

#read .zshenv
if [ -e ${HOME}/.zshenv ]; then
    source ~/.zshenv
fi

# read .zprofile
if [ -e ${HOME}/.zprofile ]; then
    source ~/.zprofile
fi

# GPG sigunature
export GPG_TTY=$TTY

export TERM=xterm-256color
export EDITOR=nvim

# start X
if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
    exec startx
fi

# load end
echo "done."
